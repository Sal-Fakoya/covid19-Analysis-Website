{
  "hash": "d7a6e29b1bb8f2aae555d3278b5edfbb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: EDA Process\ndate: \"2025-02-11\"\nformat: hugo-md\noutput: html_document\ntoc: true\n# jupyter: python3\n---\n\n\n\n\n\n# Data Cleaning Pipeline\n\nThis page is a continuation of the previous section and outlines the EDA process performed for this COVID-19 analysis in the United States. In this section, we'll create new columns for the 7 day moving average for each numerical table from `df.main`. Using a 7 day moving average helps smooth out the jumps we will have in the plots without the moving instance. There will be a varietry of plots I created here before getting there, and I will expand more on that in the sections below.\n\n## 1. Initial Setup\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n## A few graphs before getting serious...\n\nI made a few plots here just to kind of get a rough view of what the data across each state by region and on the state-level. I wanted to get a feel for the total number of infections and deaths and to see the records in a map. This steps don't essentially finalize anything. I just wanted a rough view on one or a few states before and while answering real questions.\n\n### Check the total number of infections and deaths by region:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Get total number of infections and deaths:\n# - states per region\ndf.main %>% \n  group_by(region) %>% \n  reframe(states = n_distinct(state),\n          total_death = sum(deaths_total),\n          confirmed_total = sum(confirmed_total))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 Ã— 4\n  region        states total_death confirmed_total\n  <chr>          <int>       <int>           <dbl>\n1 North Central     12    26293166      1424039247\n2 Northeast          9    38364209      1081429125\n3 South             16    44545840      2571405091\n4 West              13    22062974      1428613518\n```\n\n\n:::\n\n```{.r .cell-code}\n## show states on map:\nmax_date <- df.main %>% pull(date) %>% max(.)\n\ndf.main %>% \n  filter(date == max_date) %>% \n  # get longitude and latitude for each state:\n  left_join(x = .,\n            y = map_data(\"state\"),\n            by = c(\"state_\" = \"region\")) %>% \n  ggplot(mapping = aes(x = long,\n                       y = lat,\n                       group = group)) +\n  geom_polygon(aes(fill = region),\n               color = \"black\") +\n  xlab(\"\") +\n  ylab(\"\") +\n  ggtitle(\"\") +\n  theme_bw() +\n  theme(axis.ticks = element_blank(),\n        axis.text = element_blank())\n```\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-2-1.png){width=768}\n:::\n:::\n\n\n\n\n**Results:**\n+ Here, I wanted to get a rough feel for the total number of infections and deaths by region and I used a map to see that.\n+ {{< lorem >}} Get back to this soon!\n\n\n\n## Question 1:  How does total number of confirmed cases and COVID-19 related deaths change over time? - on a regional level - on a national level - on a state level:\n\nHere, we want to look at the total number of confirmed cases as they change over time. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Get relative counts:\ndf.main <- df.main %>% \n  mutate(confirmed_totalPerc = confirmed_total / population,\n          deaths_totalPerc = deaths_total / population)\n\n \n## add region groups:\ndf_regionGroup <- df.main %>% \n  group_by(region) %>% \n  count(state) %>% \n  ungroup() %>% \n  arrange(region, state) %>% \n  # add state count:\n  group_by(region) %>% \n  mutate(states = n(),\n         id = row_number()) %>% \n  ungroup() %>% \n  # add group id:\n  mutate(group = case_when(id <= round(states / 2, 0) ~ 1, \n                           T ~ 2)) %>% \n  mutate(region_group = paste(region, \"- group\", group, sep = \" \")) %>% \n  select(state, region_group)\n\n\n## bring groups to main table:\ndf.main <- df.main %>%\n  left_join(x = .,\n            y = df_regionGroup,\n            by = \"state\")\n\n## Plot for each region and group:\n## Plot:\nregion_group <- df_regionGroup %>% \n  distinct(region_group) %>% \n  pull(region_group)\n\nmap(.x = region_group, .f = ~plotConfirmedCasesTotal(region.group = .x))\n```\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-1.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-2.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-3.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-4.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-5.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-6.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-7.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-8.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-9.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-10.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-11.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-12.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-13.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-14.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-15.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-16.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-17.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-18.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-19.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-20.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-21.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-22.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-23.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-24.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-25.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-26.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-27.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-28.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-29.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-30.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-31.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-32.png){width=768}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] \"./explore/01_confirmed_cases_and_deaths North Central - group 1 .png\"\n\n[[2]]\n[1] \"./explore/01_confirmed_cases_and_deaths North Central - group 2 .png\"\n\n[[3]]\n[1] \"./explore/01_confirmed_cases_and_deaths Northeast - group 1 .png\"\n\n[[4]]\n[1] \"./explore/01_confirmed_cases_and_deaths Northeast - group 2 .png\"\n\n[[5]]\n[1] \"./explore/01_confirmed_cases_and_deaths South - group 1 .png\"\n\n[[6]]\n[1] \"./explore/01_confirmed_cases_and_deaths South - group 2 .png\"\n\n[[7]]\n[1] \"./explore/01_confirmed_cases_and_deaths West - group 1 .png\"\n\n[[8]]\n[1] \"./explore/01_confirmed_cases_and_deaths West - group 2 .png\"\n```\n\n\n:::\n:::\n\n\n\n\n**Features and Outputs:**\n+ I created new columns for relative counts in percentage by dividing the infection and deaths total by the population.\n+ I added a region group column for each region, so I can properly categorize by each region. It felt easier for me this way.\n+ Then I created a plot for each region's group to track the pandemic's progression for each region.\n\n\n## Question 2: Which US state had the highest  percentage of confirmed cases and deaths (relative count)? \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## bar chart:\nplot <- df.main %>% \n  filter(date == max_date) %>% \n  select(region, state, confirmed_totalPerc, deaths_totalPerc) %>% \n  rename(`confirmed total %` = confirmed_totalPerc, \n         `death total %` = deaths_totalPerc) %>% \n  # convert from wide to long:\n  pivot_longer(cols = c(`confirmed total %`, `death total %`),\n               names_to = \"percentage\",\n               values_to = \"values\") %>% \n  group_by(state) %>% \n  mutate(total_perc = sum(values)) %>% \n  ungroup() %>% \n  arrange(total_perc, state) %>% \n  mutate(state = as.factor(state)) %>% \n  mutate(state = fct_inorder(state)) %>% \n  ggplot(mapping = aes(x = values,\n                       y = state,\n                       fill = region)) +\n  geom_col(color = \"black\") +\n  facet_wrap(percentage ~ .,\n             scales = \"free\") + \n  xlab(\"Percentage of State Population\") +\n  ylab(\"State\") +\n  ggtitle(\"Barplot of Confirmed Cases and Deaths for Each State\") +\n  scale_fill_viridis_d() +\n  theme_minimal()\n\ndir = \"./explore\"\nif (!dir.exists(dir))\n{\n    dir.create(dir)\n}\n\n# export plot:\nggsave(filename = \n         \"./explore/02_Barplot_of_Confirmed_Cases_and_Deaths_Per_State.png\",\n       plot = plot,\n       width = 30,\n       height = 25,\n       units = \"cm\")\n\n\n## Create a map regarding relative counts:\ndf_samp <- df.main %>% \n  filter(date == max_date) %>% \n  select(region, region_group, state, state_, confirmed_totalPerc, deaths_totalPerc) %>% \n  # get longitude and latitude for each state:\n  left_join(x = .,\n            y = map_data(\"state\"),\n            by = c(\"state_\" = \"region\")) %>% \n  rename(`confirmed total %` = confirmed_totalPerc, \n         `death total %` = deaths_totalPerc) %>% \n  pivot_longer(cols = c(`confirmed total %`, `death total %`),\n               names_to = \"percentage\",\n               values_to = \"values\") %>% \n  ggplot(mapping = aes(x = long,\n                       y = lat,\n                       group = state)) +\n  geom_polygon(aes(fill = values),\n               color = \"black\",\n               show.legend = T) +\n  xlab(\"\") +\n  ylab(\"\") +\n  ggtitle(\"\") +\n  theme_bw() +\n  theme(axis.ticks = element_blank(),\n        axis.text = element_blank()) + \n  scale_fill_viridis_c(option = \"inferno\")\n\ndf_samp\n```\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-4-1.png){width=768}\n:::\n\n```{.r .cell-code}\n## Rename relative counts (in percentage) columns:\ndf.main <- df.main %>% \n  rename(`confirmed total %` = confirmed_totalPerc, \n         `death total %` = deaths_totalPerc)\n\np2 <- df.main %>% \n  filter(date == max_date) %>% \n  select(region, state_, state, `confirmed total %`, `death total %`) %>% \n  # get longitude and latitude for each state:\n  left_join(x = .,\n            y = map_data(\"state\"),\n            by = c(\"state_\" = \"region\")) %>% \n  ggplot(mapping = aes(x = long,\n                       y = lat,\n                       group = state)) +\n  geom_polygon(aes(fill = `confirmed total %`),\n               color = \"black\",\n               show.legend = T) +\n  xlab(\"\") +\n  ylab(\"\") +\n  ggtitle(\"Percentage of Confirmed Cases for Each State Population\") +\n  theme_bw() +\n  theme(axis.ticks = element_blank(),\n        axis.text = element_blank()) + \n  scale_fill_viridis_c(option = \"inferno\")\n\n\np1 <- df.main %>% \n  filter(date == max_date) %>% \n  select(region, state_, state, `confirmed total %`, `death total %`) %>% \n  # get longitude and latitude for each state:\n  left_join(x = .,\n            y = map_data(\"state\"),\n            by = c(\"state_\" = \"region\")) %>% \n  ggplot(mapping = aes(x = long,\n                       y = lat,\n                       group = state)) +\n  geom_polygon(aes(fill = `death total %`),\n               color = \"black\",\n               show.legend = T) +\n  xlab(\"\") +\n  ylab(\"\") +\n  ggtitle(\"Percentage of Death Cases for Each State Population\") +\n  theme_bw() +\n  theme(axis.ticks = element_blank(),\n        axis.text = element_blank()) + \n  scale_fill_gradient(low = \"white\", high = \"black\")\n\nplot <- plot_grid(p1, p2, nrow = 2)\n\n# export plot:\nggsave(filename = \n         \"./explore/02_Map_of_Confirmed_Cases_and_Deaths_Per_State.png\",\n       plot = plot,\n       width = 30,\n       height = 25,\n       units = \"cm\")\n```\n:::\n\n\n\n\n**Results:**\n+ Bar charts are created here for relative counts in percentage of death cases and infection for each state population.\n+ Maps are also created to see the percentage across all states using a continuous scale for the color.\n+ Plots are then saved to `./explore` directory.\n\n\n## Question 3: Daily Pandemic Dynamics: How do daily confirmed cases and deaths change over time?\n\nHere, we want to look at how daily confirmed cases and deaths change over time. Essentially, we'll be performed a time series. The plot in the code block below will have jumps that we will smoothen out in the second code block. The first is kind of to see for ourselves the jags, which will help us realize the *need* for a moving average!\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf.main %>% \n  group_by(state, date) %>% \n  arrange(state, date) %>% \n  mutate_at(.tbl = .,\n            .vars = c(\"confirmed_daily_cases\", \"death_daily_cases\"),\n            .funs = function(x){ifelse(is.na(x), 0, x)}) %>% \n  pivot_longer(data = .,\n               cols = c(\"confirmed_daily_cases\", \"death_daily_cases\"),\n               names_to = \"daily_cases\",\n               values_to = \"values\") %>% \n  ggplot(mapping = aes(x = date,\n                       y = values,\n                       color = daily_cases)) +\n  geom_line(show.legend = F) + \n  facet_wrap(region ~ ., scales = \"free\")\n```\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-5-1.png){width=768}\n:::\n:::\n\n\n\n\n**Results:**\n+ Here, you will see that our first time series have jumps since missing values and negative were replaced with zeros earlier in the data cleaning because there were inconsistencies in the reporting of data by states. Instead, we use a moving average to smooth out these jumps. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(zoo)\n\ndf.main <- df.main %>% \n  arrange(state, date) %>% \n  group_by(state) %>% \n  mutate( across( .cols = c(confirmed_daily_cases, death_daily_cases),\n                  ~ rollapply(data = ., width = 7, FUN = mean, fill = NA, \n                              align = \"right\", na.rm = TRUE),\n      .names = \"{.col} 7d Avg\")) %>% \n  ungroup()\n\n# Data validation here: check for missing values\ndf.main %>% \n  filter(is.na(`confirmed_daily_cases 7d Avg`)) %>% \n  select(`confirmed_daily_cases 7d Avg`) %>% \n  nrow()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 300\n```\n\n\n:::\n\n```{.r .cell-code}\ndf.main %>% \n  filter(is.na(`death_daily_cases 7d Avg`)) %>% \n  select(`death_daily_cases 7d Avg`) %>% \n  nrow()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 300\n```\n\n\n:::\n\n```{.r .cell-code}\n# Plot for each region:\ndf.main %>% \n  pivot_longer(data = .,\n               cols =\n                 c(`confirmed_daily_cases 7d Avg`, `death_daily_cases 7d Avg`),\n               names_to = \"daily_cases\",\n               values_to = \"values\") %>% \n  ggplot(mapping = aes(x = date,\n                       y = values,\n                       color = daily_cases)) +\n  geom_line(show.legend = F, alpha = 0.7) + \n  scale_fill_viridis_d() +\n  facet_wrap(region ~ ., scales = \"free\")\n```\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-6-1.png){width=768}\n:::\n\n```{.r .cell-code}\n# Plot:\nmap(.x = region_group, \n    .f = ~ plot7DayAverage(region.group = .x))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-6-2.png){width=768}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[2]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-6-3.png){width=768}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[3]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-6-4.png){width=768}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[4]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-6-5.png){width=768}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[5]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-6-6.png){width=768}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[6]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-6-7.png){width=768}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[7]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-6-8.png){width=768}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[8]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-6-9.png){width=768}\n:::\n:::\n\n\n\n\n**Features:**\n+ We added a 7 day moving average columns for the `confirmed_daily_cases` and `death_daily_cases` to the `df.main`\n+ Then we did data validation to check for missing values in the moving averages. We should expect No missing values in the moving average, because the essence of the moving average is to smooth out the jumps in the time series. \n+ The plot returned from the code block should show the smoothed time series for the pandemic dynamics.\n\n## Question 4: Is there a connection between state wealth, state population, confirmed cases and deaths?\n\nI'll reframe a bit: Do state wealth and/or state population have an effect on total percentage of confirmed cases and deaths?\n\nThough we can't say it does, but plotting the scatteplot will show if there is some kind of relationship that we can notice ourselves.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot <- df.main %>% \n  filter(date == max_date) %>% \n  ggplot(aes(x = `confirmed total %`,\n             y = `death total %`,\n             size = population_in_mil,\n             color = gdp_per_capita)) +\n  geom_point(alpha = 0.75,\n             show.legend = T) +\n  facet_wrap(. ~ region, scales = \"free\") +\n  scale_color_gradient(low=\"brown1\", high=\"green\") +\n  scale_size_area(max_size = 30) +\n  theme_minimal() +\n  xlab(\"Total Confirmed Cases %\") +\n  ylab(\"Total Deaths %\") +\n  ggtitle(\"Total Confirmed Cases and Total Deaths % VS GDP and population\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\nfilename <- file.path(paste0(\"./explore/04_total_confirmed_deaths_perc_gdp_pop_and_scatter.png\"))\n\n# Save plot\nggsave(filename = filename,\n       plot = plot,\n       width = 35, height = 25, units = \"cm\",\n       dpi = 1200)\n```\n:::\n\n\n\n\n**Features:**\n+ We plot scatterplots to try to visualize the relationship.\n+ These plots are saved in the `./explore` directory as well.\n\n\n## Question 5: Does vaccination help fighting the COVID-19 pandemic? i.e does vaccination help decrease covid-19 confirmed cases and death toll?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap(.x = region_group,\n    .f = ~ plot_vaccineDosesTotal_7DayAVg(region.group = .x))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-8-1.png){width=768}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[2]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-8-2.png){width=768}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[3]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-8-3.png){width=768}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[4]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-8-4.png){width=768}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[5]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-8-5.png){width=768}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[6]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-8-6.png){width=768}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[7]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-8-7.png){width=768}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[8]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-8-8.png){width=768}\n:::\n:::\n\n\n\n\n**Features:**\n+ Here, we plot the moving averages of the cummulative sum of vaccine doses already calculated from before to see the trend of the does, confirmed cases and death toll.\n\n\n## Question 6: Can you see the effect of government response against COVID-19 pandemic?\n\nHere we show on map how number of COVID-case have changed over time (monthly). \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add date id and snapshot flag for every 30th day\ndf.main <- df.main %>% \n  arrange(state, date) %>% \n  # date id per state:\n  group_by(state) %>% \n  mutate(date_id = row_number()) %>% \n  ungroup() %>% \n  # add date snapshot flag for every 30th day:\n  mutate(date_snapshot_flag = case_when(date_id == 1 ~ TRUE,\n                                       date_id == max_date ~ TRUE,\n                                       date_id %% 30 == 0 ~ TRUE,\n                                       TRUE ~ FALSE))\n\n# plot the maps:\nvariables <- c(\"confirmed_total\", \"deaths_total\", \"vaccine_doses_total\")\n\nplots <- map(variables, ~ plotCovid19Map_overTime(df.main, .x))\nplots\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-9-1.png){width=768}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[2]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-9-2.png){width=768}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[3]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-9-3.png){width=768}\n:::\n:::\n\n\n\n\n\n**Features:**\n+ A new columns for the date flag for every 30th day (month) is created.\n+ Stacked area charts of covid 19 indicators in a log-scale time series are shown, as well as the government response metrics.\n\n\n## Question 7:  How High was the response rate of each state towards pandemic?\n\nWe sort by state, date then the stringency index, grouping by state and seeing the stacked area charts of the stringgency index.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwStringencyIndex <- df.main %>% \n  arrange(state, date, stringency_index_for_display) %>% \n  # date id per state:\n  group_by(state) %>% \n  mutate(date_id = row_number()) %>% \n  ungroup() %>% \n  # add date snapshot flag for every 30th day:\n  mutate(date_snapshot_flag = case_when(date_id == 1 ~ TRUE,\n                                        date_id == max_date ~ TRUE,\n                                        date_id %% 30 == 0 ~ TRUE,\n                                        TRUE ~ FALSE))\n\nplots <- map(\"stringency_index_for_display\",\n             ~ plotCovid19Map_overTime(df.main, .x))\n```\n:::\n\n\n\n\n\n## Question 7: How each state is doing on a state level: How selected states are coping with the pandemic over time?  \n\nHere we look at the vaccine smoothed daily counts by creating first the 7 day moving average column and plotting for some states here: California, Texas, New York are used as examples.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## vaccine smoothed daily counts:\ndf.main <- df.main %>% \n  arrange(state, date) %>% \n  group_by(state) %>% \n  mutate(across( .cols = daily_vacc_doses,\n                  ~ rollapply(data = ., width = 7, FUN = mean, fill = NA, \n                              align = \"right\", na.rm = TRUE),\n                 .names = \"{.col} 7d Avg\")) %>% \n  ungroup()\n\n\n\nplotCovid19Indicators_stateLevel(data = df.main, state_selection = \"California\")\n```\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-11-1.png){width=768}\n:::\n\n```{.r .cell-code}\nplotCovid19Indicators_stateLevel(data = df.main, state_selection = \"New York\")\n```\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-11-2.png){width=768}\n:::\n\n```{.r .cell-code}\nplotCovid19Indicators_stateLevel(data = df.main, state_selection = \"Texas\")\n```\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-11-3.png){width=768}\n:::\n\n```{.r .cell-code}\nplotCovid19Indicators_stateLevel(data = df.main, state_selection = \"Nebraska\")\n```\n\n::: {.cell-output-display}\n![](eda.markdown_strict_files/figure-markdown_strict/unnamed-chunk-11-4.png){width=768}\n:::\n:::\n\n\n\n\n\n# Export Data\n\nI exported the data cleaned, merged and with the newly created columns in this EDA, if you would like to perform more analysis. You should be able to see it in my github repo as `df-main.csv` file.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_csv(x = df.main, file = \"df-main.csv\")\n```\n:::\n",
    "supporting": [
      "eda.markdown_strict_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}